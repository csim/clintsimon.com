<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clint Simon</title>
    <link>http://clintsimon.com/</link>
    <description>Recent content on Clint Simon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright</copyright>
    <lastBuildDate>Mon, 27 Jul 2015 08:23:36 -0800</lastBuildDate>
    <atom:link href="http://clintsimon.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MongoDB .Net Driver date handling</title>
      <link>http://clintsimon.com/post/2015/2015-07-27-MongoDB-Date-Handling/</link>
      <pubDate>Mon, 27 Jul 2015 08:23:36 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2015/2015-07-27-MongoDB-Date-Handling/</guid>
      <description>&lt;p&gt;I ran into an interesting situation when saving dated to MongoDB using the Mongo .Net driver (version 2.0).&lt;/p&gt;

&lt;p&gt;When saving a date with &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/system.datetime.kind%28v=vs.110%29.aspx&#34;&gt;unspecified kind&lt;/a&gt;, the driver converts the date to a universal datetime. It appears that the driver will assume that a DateTime object with an unspecified kind is a local time, and convert it to universal time (UTC) before committing it to the database.&lt;/p&gt;

&lt;p&gt;In my particular case, my origin date was UTC and was read from SQL server. Because entity framework does not set the Kind property on DateTime fields, MongoDB assuming these dates are local and performed a conversion to UTC. (Arrghhh)&lt;/p&gt;

&lt;p&gt;Moral of the story: if you are converting data from SQL Server to MongoDB, make sure to call .ToLocalTime() on all dates even if they are stored as UTC. This will set the DateTime kind to local and avoid an inadvertent conversion by MongoDB on commit.&lt;/p&gt;

&lt;p&gt;EDIT: As Robert suggests below, it is better to set the Kind on the DateTime because of possible UTC/Local conversion issues. Sample:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var unspecifiedDateTime = ...; // returned by Entity Framework
var utcDateTime = DateTime.SpecifyKind(unspecifiedDateTime, DateTimeKind.Utc);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>MongoDB .Net Driver date handling22</title>
      <link>http://clintsimon.com/post/2015/2015-07-27-MongoDB-Date-Handling2/</link>
      <pubDate>Mon, 27 Jul 2015 08:23:36 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2015/2015-07-27-MongoDB-Date-Handling2/</guid>
      <description>&lt;p&gt;I ran into an interesting situation when saving dated to MongoDB using the Mongo .Net driver (version 2.0).&lt;/p&gt;

&lt;p&gt;When saving a date with &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/system.datetime.kind%28v=vs.110%29.aspx&#34;&gt;unspecified kind&lt;/a&gt;, the driver converts the date to a universal datetime. It appears that the driver will assume that a DateTime object with an unspecified kind is a local time, and convert it to universal time (UTC) before committing it to the database.&lt;/p&gt;

&lt;p&gt;In my particular case, my origin date was UTC and was read from SQL server. Because entity framework does not set the Kind property on DateTime fields, MongoDB assuming these dates are local and performed a conversion to UTC. (Arrghhh)&lt;/p&gt;

&lt;p&gt;Moral of the story: if you are converting data from SQL Server to MongoDB, make sure to call .ToLocalTime() on all dates even if they are stored as UTC. This will set the DateTime kind to local and avoid an inadvertent conversion by MongoDB on commit.&lt;/p&gt;

&lt;p&gt;EDIT: As Robert suggests below, it is better to set the Kind on the DateTime because of possible UTC/Local conversion issues. Sample:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var unspecifiedDateTime = ...; // returned by Entity Framework
var utcDateTime = DateTime.SpecifyKind(unspecifiedDateTime, DateTimeKind.Utc);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Dropzone knockout binding</title>
      <link>http://clintsimon.com/post/2014/2014-10-17-dropzone-knockout-binding/</link>
      <pubDate>Fri, 17 Oct 2014 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2014/2014-10-17-dropzone-knockout-binding/</guid>
      <description>&lt;p&gt;A very simple knockout binding for &lt;a href=&#34;http://www.dropzonejs.com/&#34;&gt;dropzone.js&lt;/a&gt;&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/csim/4513ae3316104e6f474d.js?file=dropzone.knockout.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://gist.github.com/csim/4513ae3316104e6f474d.js?file=usage.html&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Data Migration is Hard</title>
      <link>http://clintsimon.com/post/2013/2013-08-06-Data-Migration-is-Hard/</link>
      <pubDate>Wed, 06 Aug 2014 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-08-06-Data-Migration-is-Hard/</guid>
      <description>&lt;p&gt;Data migration can sink your project. It lurks around the edges of your estimation model, hiding deep dark secrets that will only be uncovered at the very end of the project. Nothing could be worse. Discovering that you need to increase the migration schedule 5 fold at the 11th hour can not only derail your project but if it happens too often it might derail your career.&lt;/p&gt;

&lt;p&gt;I have learned a few lesson on this topic:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Re-estimate your migration scope of work when there are significant changes in the new application.&lt;/strong&gt; At the beginning of the project, migration seems easy. A new system with like functionality should have a similar data model with a one-to-one mapping against the old data model.&lt;/p&gt;

&lt;p&gt;Often times the new system will morph into something completely different, creating complex transforms for the data migration process. Not only is this extra work for the data migration but you have to &lt;em&gt;define&lt;/em&gt; this extra work.&lt;/p&gt;

&lt;p&gt;Ideally when changes creep into the new system build, the data migration estimates are updated and timelines are adjusted. Having a designated data migration subject matter expert helps to spot trouble on the horizon and alert the team to data migration impact.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run your migration on the real data.&lt;/strong&gt; There is no substitute for real migration data. Often times, sample data is used for too long which engenders a false sense of confidence. When you finally use the real data, there are a boat load of issues that you could not have predicted.&lt;/p&gt;

&lt;p&gt;Use the real customer data as soon as possible in the process. Look at the outcomes in the new application, run scenario testing early and often. You simply have no idea what issues you will bump into.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Think about performance.&lt;/strong&gt; No matter how elegant your code or how perfect you attribute mappings are, there will come a time when performance is paramount. If the migration takes 10 days to complete, most likely you have failed.&lt;/p&gt;

&lt;p&gt;Have a focus on performance from the beginning of the development effort. Identify the total number of source records to be transformed. Then get some baseline throughput numbers from you migration process. This will tell you how long the migration execution will take. You can also use a known duration to calculate how many records per second you need to achieve.&lt;/p&gt;

&lt;p&gt;Once you know the desired parameters, you can start to optimize your code. Optimizing performance is an &lt;a href=&#34;http://www.amazon.com/NET-Performance-Testing-Optimization-Complete/dp/1906434409&#34;&gt;art form&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Multithread is a good way to improve performance but it comes with major pitfalls. The saying goes: You implemented multithreading to solve your problem, now you have two problems. If you understand thread safety and the basics of multithreaded software design, then multithreading is a good option, otherwise stay away from it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Think about the execution plan &amp;amp; timings.&lt;/strong&gt; What time window is available to perform the migration? How much down time can you afford? Put together a timeline that clearly delineates the time allotted for each phase of the migration.&lt;/p&gt;

&lt;p&gt;Often times one way around performance and timing issues is to implement a &amp;ldquo;delta&amp;rdquo; load where only the changed data is migrated. First you run the full load, then the delta process moves only the data that has changed since the last migration pass. This breaks the migration process into smaller pieces and allows for those pieces to be spread across a longer period of time. When it&amp;rsquo;s time to go live, you only need to run the delta process once more to bring the data into synchronization, then you can launch the new system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understand the differences between legacy and new systems with regard to business use cases.&lt;/strong&gt; Don&amp;rsquo;t just think about data model differences, think about business process differences. The business context around data attributes is important when the situation dictates a complex transformation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Document all data gaps for the customer.&lt;/strong&gt; Inevitably you will run into data that simple cannot be directly mapped, transformed or converted to the new system. It is of the utmost importance to document these gaps, triage these issues with the client and work toward some form of resolution.&lt;/p&gt;

&lt;p&gt;There are general three things that the client may decide:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ignore the data attribute. It is not important in the new system. Keep a backup of the old database just in case.&lt;/li&gt;
&lt;li&gt;Map the attribute to a different attribute in the new system. Things have been simplified or consolidated and the new system recognizes this attribute in a different way.&lt;/li&gt;
&lt;li&gt;Force the new system to consume the old attribute. Make a change request to add the old attribute to the new system. This usually stems from a mistake where important data attributes have been lost in the new system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Plan for surprises.&lt;/strong&gt; Your source and destination are fixed, therefore scope is fixed. The causes more timeline risk, therefore you need to counter with rigor in estimation, planning, engineering and additional timeline contingency. There is no room to remove features or functionality from the migration process.&lt;/p&gt;

&lt;p&gt;I have seen one scope reduction approach work, which is to propose the reduction of data volume by the process of archiving old data. This does not reduce the data mapping scope but reduces the timeline because migration execution time is reduced.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bootstrap size indicator</title>
      <link>http://clintsimon.com/post/2014/2014-06-06-bootstrap-size-indicator/</link>
      <pubDate>Fri, 06 Jun 2014 08:23:36 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2014/2014-06-06-bootstrap-size-indicator/</guid>
      <description>&lt;p&gt;I have been doing work with &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap 3&lt;/a&gt; as of late. When building responsive layouts, I find it very handy to immediately see which predefined size group you are currently viewing. Here’s a little snippet that shows the current Bootstrap size modifier.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/csim/30aed7384208a76f6a07.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is especially helpful when viewing a page from a mobile device or table. You can easily deduce which size group maps to a particular device in each orientation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving the mountain, again.</title>
      <link>http://clintsimon.com/post/2014/2014-05-05-Mountain/</link>
      <pubDate>Mon, 05 May 2014 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2014/2014-05-05-Mountain/</guid>
      <description>&lt;p&gt;IT projects are difficult, long and arduous. Requirements change, budgets are tight, and deadlines loom like a dark cloud. Sometimes it feels like you are moving mountains to ship the project. It can be quite a grind. For people like us that care about the quality and craft of our work, this can become quite the pressure cooker.&lt;/p&gt;

&lt;p&gt;We are very much invested in the success of the project and the success of the business as a whole. To the point where we sacrifice personal/family time and relationships.&lt;/p&gt;

&lt;p&gt;Generally the technology nuts and bolts do not present the biggest obstacle. Accumulating context is the real money pit. A lot of time is spent understanding the customer&amp;rsquo;s business process and how technology can help to streamline that process.&lt;/p&gt;

&lt;p&gt;The problem here is that when the project is over &amp;hellip; poof you are gone. Onto the next, without anything but some addition XP (epic set?!?) to show for it.&lt;/p&gt;

&lt;p&gt;When the next project starts you will need to build this business context all over again. Again, venturing into unknown territory to discover the next dragon to be eviscerated. What a grind. Just when you get things figured out, you move on.&lt;/p&gt;

&lt;p&gt;There are a couple of things that I have found which help:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t get to high or too low. When things go bad on the current project, form a copping mechanism. For me, I like to work out at the gym. You might try reading, cleaning or hanging out with friends. Make sure it&amp;rsquo;s something that takes you mind off of work.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t get too invested. This can be a tough one especially for younger people. Try to realize that you are playing the long game. It&amp;rsquo;s a marathon not a sprint. By avoiding living and dying with current project, you will be able to adapt to the next project much more easily.&lt;/li&gt;
&lt;li&gt;Specialize in an industry vertical. By specializing you can build reusable knowledge and context which can be transferred to the next project.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with Windows Phone 7 application development</title>
      <link>http://clintsimon.com/post/2011/2011-02-16-Getting-started-with-Windows-Phone-7-development/</link>
      <pubDate>Sun, 16 Feb 2014 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2011/2011-02-16-Getting-started-with-Windows-Phone-7-development/</guid>
      <description>

&lt;p&gt;Get ready to create your first Windows Phone 7 (WP7) application! With only minimum software development skills, you can create your very own shiny new WP7 app.&lt;/p&gt;

&lt;h3 id=&#34;get-the-tools:4a24e5d9c6b9571ca22b580723fd26f6&#34;&gt;Get the tools&lt;/h3&gt;

&lt;p&gt;The first step is to go get the tools you&amp;rsquo;ll need to build your application. Microsoft has the best development tools in world (in my humble opinion). Since WP7 application development is an extension of general .NET platform development and Silverlight technology, you can use the standard .NET tools set to development WP7 apps. This includes visual studio 2010, C# or Visual Basic, and most of the .NET framework. This is a fantastic set of tools with a myriad of features design to make application development as easy as possible.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the kicker. For WP7, these tools are completely free. No need to shell out the green, Microsoft has you covered.&lt;/p&gt;

&lt;p&gt;First go here:
&lt;a href=&#34;http://www.microsoft.com/downloads/en/details.aspx?FamilyID=04704acf-a63a-4f97-952c-8b51b34b00ce&#34;&gt;http://www.microsoft.com/downloads/en/details.aspx?FamilyID=04704acf-a63a-4f97-952c-8b51b34b00ce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the installer and run it. The release to web (RTW) installer will download and install Visual Studio 2010, the WP7 emulator, Silverlight 4 tools for Visual Studio, XNA game studio tools and Microsoft Expression blend for Windows Phone. These are all the tools you need, the install is easier than Sunday morning.&lt;/p&gt;

&lt;h3 id=&#34;hello-world:4a24e5d9c6b9571ca22b580723fd26f6&#34;&gt;Hello World&lt;/h3&gt;

&lt;p&gt;Now we can start to create our first project. Microsoft makes it super easy to create and run a WP7 project. Launch Visual Studio and go to: File -&amp;gt; New Project&lt;/p&gt;

&lt;p&gt;Now pick the type of project you want to create. For now this is not an important choice, so just pick one. The most interesting choices are the Panorama application and the Pivot application. The Panorama is the nifty application where the view scrolls from left to right and the screen to the right has the edge showing. The Pivot application still scrolls but this more like a tabbed interface where all the tabs show up in the heading and you can swipe through the left and right.&lt;/p&gt;

&lt;p&gt;For you first project, choose the Panorama application, it&amp;rsquo;s the best looking and you do want to impress your friends, right?&lt;/p&gt;

&lt;div class=&#34;vinette&#34;&gt;
&lt;img src=&#34;http://clintsimon.com/images/image2.png&#34; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;http://clintsimon.com/images/image1_1.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Once you have created the project, take a look at the contents. Might familiar if you have done any work with C# projects. It&amp;rsquo;s a basic Silverlight 3 application with some extra juice added to run on the phone. Don&amp;rsquo;t worry about the juice for now. MainPage.xaml is the entry point for the application. My default it uses MVVM or the Model View View Model pattern. This pattern is somewhat new but it is a way to separate the presentation from the data and logic, which is a good thing. Nice to see the Microsoft is being a bit progressive.&lt;/p&gt;

&lt;p&gt;Drumroll please &amp;hellip;&lt;/p&gt;

&lt;p&gt;Just hit F5. You now have a running WP7 application in under 2 minutes. Notice all the details: fluid animations, scrolling, sample data. In short, this is a working application that you can simply start to customize. This could not be easier. To me this is the power of Microsoft at work in a real way. They have brought together a strong set of technologies here, dev tools,Silverlight and the phone OS. The OS still need to mature a bit, but I think you can see that this is a baseline for building great mobile applications.&lt;/p&gt;

&lt;div class=&#34;vinette&#34;&gt;
&lt;img src=&#34;http://clintsimon.com/images/image2_1.png&#34; /&gt;
&lt;/div&gt;

&lt;h3 id=&#34;will-it-blend:4a24e5d9c6b9571ca22b580723fd26f6&#34;&gt;Will it blend?&lt;/h3&gt;

&lt;p&gt;One more thing (like that? I borrowed it from a famous guy I won&amp;rsquo;t mention here), Expression Blend is in the mix also. For those unfamiliar, Expression Blend is like Visual Studio for designers. It lets creative types work on the same xaml file that developers work on, it understands visual studio projects and it can churn out all the animations, icons and motion that are available in Silverlight and WPF. If you want to develop WP7 applications, make Blend your friend.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://clintsimon.com/images/image_thumb3.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;To launch Blend, right click on the project inside Visual Studio and choose &amp;ldquo;Open with Expression Blend&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;You will be greeted with a design surface with tons of bells and whistles. Blend can be daunting when you open it for the first time. It is one of those tools that you will probably never learn in totality because it is complex. The best way to learn is to tackle it.&lt;/p&gt;

&lt;div class=&#34;vinette&#34;&gt;
&lt;img src=&#34;http://clintsimon.com/images/image_thumb4.png&#34; /&gt;
&lt;/div&gt;

&lt;h3 id=&#34;building-more-complex-apps:4a24e5d9c6b9571ca22b580723fd26f6&#34;&gt;Building more complex apps&lt;/h3&gt;

&lt;p&gt;I am certain that there are application on the marketplace that were written in under 2 hours. If you already have a data source and you want to tie to a WP7 app as an alternate access method, general it is very easy. Microsoft gives you an exceptionally good starting point with the built-in WP7 project templates. I have only touched on the true potential here.&lt;/p&gt;

&lt;p&gt;Go make some apps!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Embed video in SharePoint</title>
      <link>http://clintsimon.com/post/2013/2013-11-25-embed-video-sharepoint/</link>
      <pubDate>Mon, 25 Nov 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-11-25-embed-video-sharepoint/</guid>
      <description>&lt;p&gt;I recently had to embed a full-screen video into a SharePoint 2010 page (don&amp;rsquo;t ask). Here is the solution using the default silverlight embeded video player which is packaged with SharePoint 2010.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/csim/10283199.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Keyboard Manual Registry Settings</title>
      <link>http://clintsimon.com/post/2013/2013-11-25-keyboard-registry-settings/</link>
      <pubDate>Mon, 25 Nov 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-11-25-keyboard-registry-settings/</guid>
      <description>&lt;p&gt;I have always had a sneaking suspicion that my keyboard repeat rate and repeat delay settings were a little too slow for my taste. Windows only lets to you increase the values in a fixed range but with a registry change, you can adjust as you please.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/csim/10286225.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Play around with AutoRepeatDelay and AutoRepeatRate, these are the settings that work for me.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t set the AutoRepeatDelay too fast, it will make it so that when you type letters they are repeated immediately. Makes it really hard to type your password :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I look for in a Candidate</title>
      <link>http://clintsimon.com/post/2013/2013-11-10-candidate/</link>
      <pubDate>Sun, 10 Nov 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-11-10-candidate/</guid>
      <description>

&lt;h2 id=&#34;must-have:31c69a2a81f7ad881c9a2895581cad31&#34;&gt;Must have&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Experience.&lt;/em&gt; Nothing trumps experience. The more times you are &amp;ldquo;at-bat&amp;rdquo;, the more lessons you learn. Particularly experience at progressively higher of levels responsibility is desirable. Challenging yourself is ultimately the only way to grow and learn.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Technology aptitude.&lt;/em&gt; I don&amp;rsquo;t necessarily mean reciting minute technical details from memory. I mean &lt;em&gt;understanding&lt;/em&gt; the underlying principles of technology. Abstraction, service oriented architecture, componentization, dependency injection, user experience design. Deep understand of these topics are what separates the great consultants from the rest.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Consulting IQ.&lt;/em&gt; Soft skills are where we make our money. Reading a room, understanding the motivations involved, working toward a common goal while avoiding or minimizing conflicts. These are things that a consultant does every day. It is hard to judge this quality&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Confidence.&lt;/em&gt; Nothing sells a candidate like the combination of confidence &lt;em&gt;and skills&lt;/em&gt;. When someone is comfortable in their own skin, everyone around them can also be at easy with any situation. Usually confidence comes from a solid history of delivery experience and the understanding that the candidate can overcome any impediments to success.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Inquisitive nature.&lt;/em&gt; Every single person on this planet should be constantly asking questions and learning. If the candidate is not asking questions (and hopefully intelligent questions), how can I hope to send that person into an unknown client situation and expect good results?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Personality and likability.&lt;/em&gt; Ultimately our clients are people and people form relationships with others and those relationships affect important decisions. Likability goes a long way toward forging relationships. Simple things, like mentioning a hobby or sharing a laugh about some common interest can add up to extremely valuable relationships over time. Some of this comes from simply liking what you do for a living, but I think mostly it comes from a positive outlook.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Honesty.&lt;/em&gt; Look, I know that things go sideways on projects. In fact, I would venture to say that every single project has a &amp;ldquo;sideways&amp;rdquo; phase at some point in the process. An honest candidate will talk intelligently about these situations and recognize that we do a difficult job and sometimes things don&amp;rsquo;t work out as expected.&lt;/p&gt;

&lt;h2 id=&#34;deal-breakers:31c69a2a81f7ad881c9a2895581cad31&#34;&gt;Deal breakers&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Candidate is too nervous to talk.&lt;/em&gt; It&amp;rsquo;s sad to say but if a candidate is too nervous to speak in an interview, there is no way that he will be able to meet with a client in unfamiliar environment. I usually go out of my way to have some small talk at the start of the interview, just to set the tone and send a message that I am approachable and we are going to have a pleasant conversation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I don&amp;rsquo;t hear excitement.&lt;/em&gt; It&amp;rsquo;s a job interview. Tell me why you are excited about this job. What you want to accomplish in your career and how you feel about seizing this opportunity. At a bare minimum, win me over with enthusiasm. Sometimes I will take someone who is excited and will work really hard over someone who has more skill.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PowerShell Sublime Text Shortcut</title>
      <link>http://clintsimon.com/post/2013/2013-11-04-powershell-sublime-shortcut/</link>
      <pubDate>Mon, 04 Nov 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-11-04-powershell-sublime-shortcut/</guid>
      <description>&lt;p&gt;Lately I have been learning about &lt;a href=&#34;http://git-scm.org&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt;. Most of this work is done at the command line, I have found myself quickly amassing PowerShell functions that acts as shortcuts.&lt;/p&gt;

&lt;p&gt;One very handy shortcut is the ability to launch the &lt;a href=&#34;http://www.sublimetext.com&#34;&gt;sublime text editor&lt;/a&gt; and open the current directory as a project. Or alternately passing in a file to edit.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/csim/10286154.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Once this function is in your powershell profile, just type &amp;ldquo;edit&amp;rdquo; at the command prompt and sublime will open the current folder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I learned to code</title>
      <link>http://clintsimon.com/post/2013/2013-08-10-how-I-learned-to-code/</link>
      <pubDate>Sat, 10 Aug 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-08-10-how-I-learned-to-code/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m not a long-term planner. I&amp;rsquo;ve never made a &amp;ldquo;5 year plan&amp;rdquo; or thought about where I want to be 10 years from now. I simply look at what my options are and make a decision about what to do next.&lt;/p&gt;

&lt;p&gt;I only learned to code because my dad needed a problem solved. He ran a consulting business where he needed to perform regular equipment maintenance. It was 1996 and the web was new. It seemed like it might be possible to track schedules and log maintenance activities via the World Wide Web.&lt;/p&gt;

&lt;p&gt;I was young and foolish, so I started right away. I knew very little about programming having only built very simple programs in basic on my commodore 64 roughly 10 years earlier. I picked Perl because it was available with my college computer lab account which was the right price (free). I could also expose the script to the web, score!&lt;/p&gt;

&lt;p&gt;Looking back, I was a pretty awful programmer at that time. I had about 5 tricks in my bag and writing a function was not one of them. The Perl script became one long if statement with print statements to emit HTML. Around 800 lines of code with no functions. Wow, does this seem backwards to me now. To top it off, I wrote a rudimentary serialization process to save my in-memory HashTable to a text file.&lt;/p&gt;

&lt;p&gt;To be fair, I did not know the word &amp;ldquo;serialization&amp;rdquo; at the time. I just knew that I needed to save some data and have it available on the next web request. I happily wrote some code at the end of my script to store the text file after each request was rendered and some code at the top to read the file. Done.&lt;/p&gt;

&lt;p&gt;I was absolutely intoxicated by the process of coding my first web application. I literally could not get enough. I worked on the script with every sliver of free time that I had and when I wasn&amp;rsquo;t working on it, I was thinking about it or dreaming about it.&lt;/p&gt;

&lt;p&gt;How could I get this element to render? How could I get the code to run faster? What do I do with this data? Can I build a calendar?&lt;/p&gt;

&lt;p&gt;I was great. I probably learned more in those 6 weeks than at any other time in my career. But more than that, it forged my desire to be a programmer. I am still chasing the high that I felt over 15 years ago on the first project. There is nothing like having an idea, building it and watching it grow into something valuable.&lt;/p&gt;

&lt;p&gt;That little application that I built went on to run a substantial part of my dad&amp;rsquo;s business for a few years until I replaced it with a new version that was more professional. It was great to see it work for so long but the larger net effect was that I was hooked on coding. I haven&amp;rsquo;t looked back once.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rediscovering Code</title>
      <link>http://clintsimon.com/post/2013/2013-08-07-Rediscovering-Code/</link>
      <pubDate>Wed, 07 Aug 2013 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2013/2013-08-07-Rediscovering-Code/</guid>
      <description>&lt;p&gt;Over the past year or so, my career has taken a turn toward what I would call &amp;ldquo;pure consulting&amp;rdquo; or put more plainly, &amp;ldquo;giving people my opinion&amp;rdquo;. During this time I really hadn&amp;rsquo;t written any code to speak of, minus some small side projects. There just wasn&amp;rsquo;t a need for it and frankly I had my hands full.&lt;/p&gt;

&lt;p&gt;All that changed when I started a new project and took ownership of a large chunk of functionality. As the development lead I sure as hell wanted to get my hands dirty with the code, setup the framework, etc. So I jumped in head first and started coding.&lt;/p&gt;

&lt;p&gt;I honestly forgot how cool it is to code something from scratch and see it grow from an idea to a fully functional application. It was total invigorating to see things take shape and evolve, each step of the way becoming more intricate and complex.&lt;/p&gt;

&lt;p&gt;I never get tired of the code manipulation cycle. Making a code change, seeing the result and making another change, over and over again. It&amp;rsquo;s just one of those things that never gets old. It really feels like a disease is some ways. Your mind is consumed, all your thoughts spent strategizing on the next set of changes and thinking of the long term implications.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a skill that feels intrinsic, not a learned behavior but something must have been inside you from the beginning. How lucky am I that I get paid to do this? Pretty cool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using IE10 with Dynamics CRM Online</title>
      <link>http://clintsimon.com/post/2012/2012-11-14-CRM-IE10/</link>
      <pubDate>Wed, 14 Nov 2012 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2012/2012-11-14-CRM-IE10/</guid>
      <description>&lt;p&gt;It appears that &lt;a href=&#34;http://crm.dynamics.com&#34;&gt;Dynamics CRM Online&lt;/a&gt; does not play well with Internet Explorer 10. In fact, it downright does not work with IE10. Many of the web dialogs are unusable and when you receive an error, the error dialog exhibits bazaar behavior.&lt;/p&gt;

&lt;p&gt;This is an absolute tragedy. Windows 8 launched 3 weeks ago with IE10 included and the Dynamics product team was not prepared. The user experience on a windows 8 machine for Dynamics CRM is basically unusable.&lt;/p&gt;

&lt;p&gt;However, there is an easy way to fix this. For IE10, hit ALT. Then go to Tools -&amp;gt; Compatibility View Settings.&lt;/p&gt;

&lt;div class=&#34;vinette&#34;&gt;
&lt;img src=&#34;http://clintsimon.com/images/ie10_1.png&#34; width=&#34;325&#34; height=&#34;514&#34; /&gt;
&lt;/div&gt;

&lt;p&gt;Then add your CRM Online URL to the list. Below I am using the default dynamics.com domain. This will force IE10 to render the CRM application in compatibility mode.&lt;/p&gt;

&lt;div class=&#34;vinette&#34;&gt;
&lt;img src=&#34;http://clintsimon.com/images/ie10_2.png&#34; width=&#34;391&#34; height=&#34;488&#34; /&gt;
&lt;/div&gt;

&lt;p&gt;Maybe Microsoft should make dynamics.com automatically render in compatibility mode? Or would that be too big of a black eye?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keeping Up with Technology</title>
      <link>http://clintsimon.com/post/2012/2012-11-14-Keeping-Up-with-Technology/</link>
      <pubDate>Wed, 14 Nov 2012 08:00:00 -0800</pubDate>
      
      <guid>http://clintsimon.com/post/2012/2012-11-14-Keeping-Up-with-Technology/</guid>
      <description>&lt;p&gt;Learning new technologies and techniques is a part of life for any software developer. Programming is a quest for knowledge and understanding which lasts your entire lifetime. No other profession has a more dynamic working environment. Tools change and evolve on a daily basis it seems.  Learning is incumbent on all developers. Darwin&amp;rsquo;s law applies, adapt or perish.&lt;/p&gt;

&lt;p&gt;Luckily most of us are used to this environment and thrive on the constantly changing landscape. I have found over my career that the pace of change has only increased, particularly in the past few years. The move to cloud computing is a big driver and the open source movement is creating a climate of rapid discovery and change. Thousands of new approaches to old problems are being forged this very moment.&lt;/p&gt;

&lt;p&gt;Benefits can be reaped if you are efficient with your time and energy. Your value as an employee can be traced back to your technology aptitude and that aptitude is greatly affected by your knowledge of the technology spectrum which you apply to a project. This doesn&amp;rsquo;t mean that you need to have the deepest knowledge on a particular technology but instead you need a broad view of how technology fits together and how to choose the right pieces to solve a problem. Suggesting the pieces can be more important that understanding how each pieces works.&lt;/p&gt;

&lt;p&gt;Generally I try to follow a few key rules which keep me in touch with new technology:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Find quality sources.&lt;/strong&gt; Find the best possible sources which apply to the technology space where you work. Each source should have excellent content covering a set of topics that could potentially apply to your daily work.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organize the channels.&lt;/strong&gt; Create channels to monitor your sources, &lt;a href=&#34;http://reader.google.com&#34;&gt;Google reader&lt;/a&gt; works well, &lt;a href=&#34;http://twitter.com&#34;&gt;twitter&lt;/a&gt; a bit noisy. You want these streams to have a high signal to noise ratio. Don&amp;rsquo;t add pundits or 24-hour tech news into this mix. They are too noisy. Add sources that you know produce great topical content. For me, technology specific tech blogs work best.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read your channels regularly.&lt;/strong&gt; I try to read through my sources at least once per day. Some days there isn&amp;rsquo;t much to learn but other days I have multiple &amp;ldquo;holy cow&amp;rdquo; moments. If this becomes a chore then you might want to look for a new line of work :)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>